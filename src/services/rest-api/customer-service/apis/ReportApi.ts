/* tslint:disable */
/* eslint-disable */
/**
 * Customer Service API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.270
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  AccountBackOfficeReportOutputPagination,
} from '../models';
import {
    AccountBackOfficeReportOutputPaginationFromJSON,
    AccountBackOfficeReportOutputPaginationToJSON,
} from '../models';

export interface ReportGetBackOfficeReportGetRequest {
    startDate?: Date;
    endDate?: Date;
    pageIndex?: number;
    pageSize?: number;
    sortField?: string;
    sortDirection?: string;
    xPortalToken?: string;
}

/**
 * 
 */
export class ReportApi extends runtime.BaseAPI {

    /**
     */
    async reportGetBackOfficeReportGetRaw(requestParameters: ReportGetBackOfficeReportGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<AccountBackOfficeReportOutputPagination>> {
        const queryParameters: any = {};

        if (requestParameters.startDate !== undefined) {
            queryParameters['StartDate'] = (requestParameters.startDate as any).toISOString();
        }

        if (requestParameters.endDate !== undefined) {
            queryParameters['EndDate'] = (requestParameters.endDate as any).toISOString();
        }

        if (requestParameters.pageIndex !== undefined) {
            queryParameters['PageIndex'] = requestParameters.pageIndex;
        }

        if (requestParameters.pageSize !== undefined) {
            queryParameters['PageSize'] = requestParameters.pageSize;
        }

        if (requestParameters.sortField !== undefined) {
            queryParameters['SortField'] = requestParameters.sortField;
        }

        if (requestParameters.sortDirection !== undefined) {
            queryParameters['SortDirection'] = requestParameters.sortDirection;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xPortalToken !== undefined && requestParameters.xPortalToken !== null) {
            headerParameters['x-portal-token'] = String(requestParameters.xPortalToken);
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/Report/GetBackOfficeReport`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => AccountBackOfficeReportOutputPaginationFromJSON(jsonValue));
    }

    /**
     */
    async reportGetBackOfficeReportGet(requestParameters: ReportGetBackOfficeReportGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AccountBackOfficeReportOutputPagination> {
        const response = await this.reportGetBackOfficeReportGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
