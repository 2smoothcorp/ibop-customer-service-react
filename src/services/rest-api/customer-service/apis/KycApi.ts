/* tslint:disable */
/* eslint-disable */
/**
 * Customer Service API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.270
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  KycResultResponseDataResponse,
} from '../models';
import {
    KycResultResponseDataResponseFromJSON,
    KycResultResponseDataResponseToJSON,
} from '../models';

export interface KycKycScoreCorperateIdGetRequest {
    corperateId: string;
    xPortalToken?: string;
}

/**
 * 
 */
export class KycApi extends runtime.BaseAPI {

    /**
     * Retrieves the KYC score and result for a specific flow.
     */
    async kycKycScoreCorperateIdGetRaw(requestParameters: KycKycScoreCorperateIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<KycResultResponseDataResponse>> {
        if (requestParameters.corperateId === null || requestParameters.corperateId === undefined) {
            throw new runtime.RequiredError('corperateId','Required parameter requestParameters.corperateId was null or undefined when calling kycKycScoreCorperateIdGet.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (requestParameters.xPortalToken !== undefined && requestParameters.xPortalToken !== null) {
            headerParameters['x-portal-token'] = String(requestParameters.xPortalToken);
        }

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Bearer authentication
        }

        const response = await this.request({
            path: `/Kyc/KycScore/{corperateId}`.replace(`{${"corperateId"}}`, encodeURIComponent(String(requestParameters.corperateId))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => KycResultResponseDataResponseFromJSON(jsonValue));
    }

    /**
     * Retrieves the KYC score and result for a specific flow.
     */
    async kycKycScoreCorperateIdGet(requestParameters: KycKycScoreCorperateIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<KycResultResponseDataResponse> {
        const response = await this.kycKycScoreCorperateIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
