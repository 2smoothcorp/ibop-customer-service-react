/* tslint:disable */
/* eslint-disable */
/**
 * Customer Service API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.268
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PersonalInfoRequest
 */
export interface PersonalInfoRequest {
    /**
     * 
     * @type {string}
     * @memberof PersonalInfoRequest
     */
    personTypeCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonalInfoRequest
     */
    personTypeDesc?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonalInfoRequest
     */
    referenceTypeDesc?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonalInfoRequest
     */
    referenceID?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonalInfoRequest
     */
    countryCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonalInfoRequest
     */
    countryNameTh?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonalInfoRequest
     */
    countryNameEn?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonalInfoRequest
     */
    nationalityCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonalInfoRequest
     */
    nationDesc?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonalInfoRequest
     */
    identityExpireDate?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof PersonalInfoRequest
     */
    identityNeverExpire?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PersonalInfoRequest
     */
    titleCodeTh?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonalInfoRequest
     */
    titleNameTh?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonalInfoRequest
     */
    firstNameTh?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonalInfoRequest
     */
    lastNameTh?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonalInfoRequest
     */
    titleNameEn?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonalInfoRequest
     */
    firstNameEn?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonalInfoRequest
     */
    lastNameEn?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonalInfoRequest
     */
    genderCode?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonalInfoRequest
     */
    gender?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PersonalInfoRequest
     */
    birthDate?: string | null;
}

/**
 * Check if a given object implements the PersonalInfoRequest interface.
 */
export function instanceOfPersonalInfoRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PersonalInfoRequestFromJSON(json: any): PersonalInfoRequest {
    return PersonalInfoRequestFromJSONTyped(json, false);
}

export function PersonalInfoRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonalInfoRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'personTypeCode': !exists(json, 'personTypeCode') ? undefined : json['personTypeCode'],
        'personTypeDesc': !exists(json, 'personTypeDesc') ? undefined : json['personTypeDesc'],
        'referenceTypeDesc': !exists(json, 'referenceTypeDesc') ? undefined : json['referenceTypeDesc'],
        'referenceID': !exists(json, 'referenceID') ? undefined : json['referenceID'],
        'countryCode': !exists(json, 'countryCode') ? undefined : json['countryCode'],
        'countryNameTh': !exists(json, 'countryNameTh') ? undefined : json['countryNameTh'],
        'countryNameEn': !exists(json, 'countryNameEn') ? undefined : json['countryNameEn'],
        'nationalityCode': !exists(json, 'nationalityCode') ? undefined : json['nationalityCode'],
        'nationDesc': !exists(json, 'nationDesc') ? undefined : json['nationDesc'],
        'identityExpireDate': !exists(json, 'identityExpireDate') ? undefined : json['identityExpireDate'],
        'identityNeverExpire': !exists(json, 'identityNeverExpire') ? undefined : json['identityNeverExpire'],
        'titleCodeTh': !exists(json, 'titleCodeTh') ? undefined : json['titleCodeTh'],
        'titleNameTh': !exists(json, 'titleNameTh') ? undefined : json['titleNameTh'],
        'firstNameTh': !exists(json, 'firstNameTh') ? undefined : json['firstNameTh'],
        'lastNameTh': !exists(json, 'lastNameTh') ? undefined : json['lastNameTh'],
        'titleNameEn': !exists(json, 'titleNameEn') ? undefined : json['titleNameEn'],
        'firstNameEn': !exists(json, 'firstNameEn') ? undefined : json['firstNameEn'],
        'lastNameEn': !exists(json, 'lastNameEn') ? undefined : json['lastNameEn'],
        'genderCode': !exists(json, 'genderCode') ? undefined : json['genderCode'],
        'gender': !exists(json, 'gender') ? undefined : json['gender'],
        'birthDate': !exists(json, 'birthDate') ? undefined : json['birthDate'],
    };
}

export function PersonalInfoRequestToJSON(value?: PersonalInfoRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'personTypeCode': value.personTypeCode,
        'personTypeDesc': value.personTypeDesc,
        'referenceTypeDesc': value.referenceTypeDesc,
        'referenceID': value.referenceID,
        'countryCode': value.countryCode,
        'countryNameTh': value.countryNameTh,
        'countryNameEn': value.countryNameEn,
        'nationalityCode': value.nationalityCode,
        'nationDesc': value.nationDesc,
        'identityExpireDate': value.identityExpireDate,
        'identityNeverExpire': value.identityNeverExpire,
        'titleCodeTh': value.titleCodeTh,
        'titleNameTh': value.titleNameTh,
        'firstNameTh': value.firstNameTh,
        'lastNameTh': value.lastNameTh,
        'titleNameEn': value.titleNameEn,
        'firstNameEn': value.firstNameEn,
        'lastNameEn': value.lastNameEn,
        'genderCode': value.genderCode,
        'gender': value.gender,
        'birthDate': value.birthDate,
    };
}

